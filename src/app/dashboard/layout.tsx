import Footer from "@/components/footer";
import Navbar from "@/components/navbar";
import SidePanel from "@/components/sidepanel";
import { AppRouter, appRouter } from "@/server";
import { createAdminContext } from "@/server/trpc-contexts";
import { dehydrate, Hydrate, QueryClient } from "@tanstack/react-query";
import { createServerSideHelpers } from "@trpc/react-query/server";
import { Metadata } from "next";
import { cookies, headers } from "next/headers";
import { serialize } from "cookie";
import { redirect } from "next/navigation";
import { TRPCClientError } from "@trpc/client";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function DashboardLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  let helpers = undefined;
  try {
    helpers = createServerSideHelpers({
      router: appRouter,
      ctx: async () =>
        await createAdminContext({ cookies: headers().get("cookie") }),
    });
    const authUser = await helpers.getAuthUser.fetch();
    await helpers.getUser.prefetch(authUser.user.id);
  } catch (error) {
    console.log((error as TRPCClientError<AppRouter>).message);
    redirect("/login");
  }

  if (!helpers) return <></>;

  return (
    <Hydrate state={dehydrate(helpers.queryClient)}>
      <div className="flex flex-col h-screen gap-6 pb-10">
        <Navbar></Navbar>

        <div className=" lg:flex-1 flex h-[calc(100%-146px)] mx-[5%] relative">
          <SidePanel></SidePanel>
          <div className="xl:ml-[324px] lg:flex-1 h-full overflow-y-auto mt-5">
            {children}
          </div>
        </div>
      </div>
    </Hydrate>
  );
}
